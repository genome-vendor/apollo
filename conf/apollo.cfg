// Apollo configuration file. This defines the location of files needed by
// apollo. The configuration lines should have two strings. One is a key
// defining the data on the line and the other is the key's value.
// It is necessary to put quotes around the filenames/URLs if they 
// contain punctutation characters.
// Both slash-star and slash-slash comments are accepted.
// Blank lines are ignored.
// Invalid lines generate a warning, but are ignored.
// No check is made to see if all values have been defined.
//
// Note that some of these parameters are now defined only in the style files.
// Others are defined here but can be overridden in the style files.
//
// The currently used keys are:
//   AdapterHistoryFile - path to data adapter history file
//   AutosaveFile       - the name of the autosave (backup) file
//   AutosaveInterval   - how often auto save occurs
//   DataAdapterInstall - class name:string name of data adapters to be
//                        dynamically loaded. Followed by a style to 
//			  to use for that data adapter.			
//   JavaPath           - Path to the directory where bin/java lives
//                        (e.g., on linux java is in /usr/lib/java/bin/java,
//                        so JavaPath is /usr/lib/java).
//			  Used by bin/apollo startup script.
//   Memory             - Max amount of memory Apollo is allowed to use
//                        (applies only when you launch Apollo via bin/apollo)
//   BrowserProgram     - path to your web browser program (e.g. /usr/local/netscape)
//                        if you don't use the default browser.
//
//   SiteShowLimit
//   FastDrawLimit
//   TextAvoidLimit
//
//   FrameOrientation	- Orientation of feature detail panel (default is horizonal;
//                        vertical is also an option)

//  Don't forget, a line or part of a line that starts with // will be ignored.

// On Solaris, java is /bin/java, thus JavaPath is just "/"
// On Linux, java is /usr/lib/java/bin/java, thus JavaPath is /usr/lib/java
// On Mac OS X, java is /usr/bin/java, thus JavaPath is /usr
// It would probably make more sense to have JavaPath be the actual path to java, e.g.
// /usr/lib/java/bin/java, but that would make this apollo.cfg incompatible with
// the Berkeley version.
// Note: if JavaPath is commented out, bin/apollo searches for the Java
// in your path.  Set JavaPath if you want to use a different Java.
// Also note:  JavaPath is only used if you run bin/apollo.  If you run the
// installed version of Apollo, it decides for itself where to find java.
//JavaPath		"/usr/lib/java"

// Size of the memory stack allocated to Java.  This is not directly used
// if you've installed Apollo with the installer, but is used if you're
// running bin/apollo and is also used for checking whether you're running
// out of memory.
Memory 			"800M"

// If AdapterHistoryFile and AutosaveFile are not specified, Apollo will
// check to see if you have a ~/.apollo directory.  If so, it will look
// there.  If not, it will look in APOLLO_ROOT/data.  
// You can override these locations by setting these parameters to the
// desired paths.
// AdapterHistoryFile	"apollo.history"
// AutosaveFile		"apollo.backup"

// Save backup file every 20 minutes (if EnableEditing is true).
// Set AutosaveInterval to "none" to turn off autosaving.
AutosaveInterval	"20"

// Data Adapters
// If the user has a ~/.apollo directory, Apollo will check there first for
// the style files; otherwise, it will look in APOLLO_ROOT/conf.
// Optional third arg to DataAdapterInstall is a label that will appear in
// the dropdown list in the data adapter chooser.

// FlyGAMEAdapter no longer enabled--there's no public server for it.
// DataAdapterInstall	"apollo.dataadapter.flygamexml.FlyGAMEAdapter" "fly.style" "D. melanogaster data (GAME XML format)"
// Now Drosophila annotation server uses Chado XML format
DataAdapterInstall      "apollo.dataadapter.flychadoxml.FlyChadoXmlAdapter" "chado.style" "Drosophila melanogaster annotations (Chado XML format)"
// "Generic" Chado XML adapter (though it's still really geared for
// FlyBase data) loads only from files or URLs
DataAdapterInstall      "apollo.dataadapter.chadoxml.ChadoXmlAdapter" "chado.style" "Chado XML format"

// Current species-specific styles for GAMEAdapter are rice.style and fly.style
// both of which import game.style, the generic GAME style file.
// The default GAME style is fly.style, but if rice data is read, Apollo
// will automatically switch to using rice.style (see the SpeciesToStyle parameter)
//DataAdapterInstall	"apollo.dataadapter.gamexml.GAMEAdapter" "rice.style" "Rice (Oryza sativa) data--GAME XML format"
DataAdapterInstall	"apollo.dataadapter.gamexml.GAMEAdapter" "fly.style" "GAME XML format"

// GFF3 adapter is currently using the GFF style (might want to change that
// for the future)
DataAdapterInstall	"apollo.dataadapter.gff3.GFF3Adapter" "gff3.style"

DataAdapterInstall	"apollo.dataadapter.GFFAdapter" "gff.style"
// Adapter for reading raw analysis results
DataAdapterInstall	"apollo.dataadapter.analysis.AnalysisAdapter" "fly.style"
DataAdapterInstall	"apollo.dataadapter.genbank.GenbankAdapter" "genbank.style"
// PublicSeqDbURLs are for GenBank/EMBL reader.
// Use an asterisk '*' to indicate where the user supplied ID should be
// inserted into the URL
PublicSeqDbURL          "GenBank==www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=nucleotide&val=*"
PublicSeqDbURL          "EMBL==http://www.ebi.ac.uk/cgi-bin/dbfetch?db=EMBL&id=*"
DataAdapterInstall	"apollo.dataadapter.ensj.EnsJAdapter" "ensj.style"
//DataAdapterInstall	"apollo.dataadapter.ensj19.AnnotationEnsJAdapter" "ensj.style" "Old EnsJ adapter (version 19)" // Old ensj adapter
PFetchServer            "vegadb.sanger.ac.uk"
// The style for Chado is irrelevant as style is dealt with in chado-adapter.xml config file
DataAdapterInstall "apollo.dataadapter.chado.ChadoAdapter" "rice.style"
// Old DAS adapter not working well
//DataAdapterInstall	"apollo.dataadapter.das.simple.SimpleDASAdapter" "simpledas.style"
// New DAS/2 adapter (just a prototype--needs more work)
// DataAdapterInstall	"apollo.dataadapter.das2.DAS2Adapter" "das2.style" "DAS2XML file (or URL)"
//
// Synteny styles
// You can only uncomment ONE synteny adapter at a time.
// The default now is synteny-game.
//DataAdapterInstall	"apollo.dataadapter.synteny.SyntenyAdapter" "synteny.style.gff"
// Read synteny data from Ensembl databases
//DataAdapterInstall	"apollo.dataadapter.synteny.SyntenyAdapter" "synteny.style"
// GAME Synteny (now the default)
DataAdapterInstall	"apollo.dataadapter.synteny.SyntenyAdapter" "synteny-game.style" "Synteny (GAME XML format)"

// Builder adapter is experimental
// DataAdapterInstall      "apollo.dataadapter.synteny.builder.BuilderAdapter" "ensj.style"

// Serial adapter reads backup files saved from any data adapter.
// If you were not using it to read fly data, you may need to change
// the style file parameter.
DataAdapterInstall	"apollo.dataadapter.SerialDiskAdapter" "fly.style"

// Graph adapter contains an empty style for now (needed for installing the
// data adapter).  Customizations can be added later as needed
DataAdapterInstall      "apollo.dataadapter.graph.GraphAdapter" "graph.style"

// Path to web browser on your system.  If you have a Mac or PC, you
// shouldn't need to set this variable; the default browser on your system
// (usually IE) will be used.  For Linux, the default browser is mozilla;
// for other Unixes, it assumes netscape.  Change here if that is not the case.
// BrowserProgram	"/usr/local/bin/mozilla"

// If the file you choose for saving your data already exists, Apollo will pop up
// a dialog box asking you if you really want to overwrite the file.  If you prefer
// not to be asked this question, you can set AskConfirmOverwrite to false.
AskConfirmOverwrite     "true"

// When this parameter is set to "true" Apollo will pop up a dialog box asking
// if you really want to delete the current selection(s), whenever the 
// "Delete selection" option is used to remove annotations.
AskConfirmDeleteSelection     "false"

// Whether to display the "Save" option in the Apollo File menu.  The default
// is false.  Even if the option is not visible in the menu it can
// still be invoked by the Ctrl-S keyboard shortcut.  Also note that even if
// this option is set to "true" the Save option will not be displayed unless
// the EnableEditing property is set to to "true" in the style file.
ShowSaveOptionInFileMenu	"false"

// Whether to display the "Save as..." option in the Apollo File menu.  The default
// is true.  Even if the option is not visible in the menu it can
// still be invoked by the Ctrl-A keyboard shortcut.
ShowSaveAsOptionInFileMenu	"true"

// Check if the gene model can be deleted by the user.
CheckOwnership		"false"

// How many bases per pixel have to be displayed before the start and stop
// codons are displayed.  If this is set to zero, no start/stop codons will be shown.
SiteShowLimit           "15"

// Maximum number of features per pixel before features are merged together
// on the display to speed up drawing.  If you set this above one things
// get a little odd.
FastDrawLimit           "0.5"

// When labels are switched on, if there are greater than TextAvoidLimit
// bases per pixel some labels may overlap each other.  If the bases per
// pixel is less than this value, then the features and their labels are
// rearranged so nothing overlaps and all the labels can be read.  You may
// be able to set this value higher depending on the speed of your machine
// and the speed of your JVM.
TextAvoidLimit          "1500"

// Orientation of detail panel.  Other option is "vertical"
FrameOrientation        "horizontal"

// Initial width (in pixels) of main Apollo window (default is 1000)
MainWindowWidth         "1000"

// Synteny data
Karyotypes              "all.kary"

// Whether to save a .tnxml file (apollo transactions, if edits are done).
OutputTransactionXML    "false"

// The following two keys are for chado transaction xml output
// To control whether chado transactions are saved to a file. If this value is true,
// there has to be a template file specified with ChadoTransactionTemplate 
OutputChadoTransaction   "false"
// For chado transaction output - this parameter is pase dont use
// it has been replaced by <writebackXmlTemplateFile> in chado-adapter.xml
ChadoTransactionTemplate "transactionXMLTemplate_rice.xml"

// Name of the config file for the chado jdbc adapter. This file
// should reside in conf directory. Default is chado-adapter.xml. 
// (you can also override this file in .apollo)
ChadoJdbcAdapterConfigFile  "chado-adapter.xml"

// This parameter controls how Apollo keeps track of transactions internally.  
// It must be set to true in order for the PureJDBCTransactionWriter to work
// correctly.  PureJDBCTransactionWriter is one of the JDBC database writers 
// supported by the chado adapter.  If you are not using the chado adapter, 
// or are not using Apollo to do editing, leave this parameter commented out.
// If you are using the chado adapter to save edits to the database, check 
// the chado adapter configuration file to see whether <pureJDBCWriteMode> is
// set to true for any of the chado instances, and set this parameter to
// true if so (setting it to true should not affect the behavior of Apollo, 
// but may cause it to use a little extra memory for uncommitted transactions):
//SaveClonedFeaturesInTransactions	"true"

// Default format assumed when an XML file is loaded from the command
// line without the --inputFormat [game|chado] argument (and when the
// format can't be guessed from the filename).
// Options are "chado" or "game".
// Default is game.  Change to "chado" if you mostly use chadoXML.
CommandLineXmlFileFormat "game"

// Allows for a different style to be loaded for different species
// load from the same adapter (currently only GAME adapter uses this)
SpeciesToStyle "Oryza sativa -> rice.style"
SpeciesToStyle "Drosophila melanogaster -> fly.style"

// Set this to true to allow one-level annots to be read and written in GAME
// XML (v1.1) as one-level annots, without being promoted to phony three-level
// annots as they are in GAME 1.0.  (Also, one-level annots are then treated as
// one-level inside Apollo.)
// This was set to false for r1.6.0 (to make it write GAME v1.0).
DO-ONE-LEVEL-ANNOTS "true"

// Whether to listen to http requests to scroll to or possibly load a
// new region (from IGB, possibly others in the future). Default is false.
// Initially this only works with fruitfly (using GAME).
EnableHttpServer "false"

// Set this to true to turn on a number of experimental Apollo features.  Note
// that this parameter no longer controls the printing of debug messages; these
// are now determined by options passed to the apollo start script (and are
// logged using the Log4J package.)
//Debug	"true"
